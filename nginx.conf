server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Add debug headers for troubleshooting
    add_header X-Frontend-Service "SQL Analytics Platform" always;
    
    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Health check endpoint for this service
    location /health {
        return 200 'frontend-healthy\n';
        add_header Content-Type text/plain;
    }

    # Important: Do NOT proxy /api requests here
    # The frontend JavaScript should call the backend service directly
    # This prevents double /api path issues
    location /api/ {
        return 404 '{"error":"API requests should go directly to backend service","message":"This is the frontend service. API requests should be made to the backend service URL."}';
        add_header Content-Type application/json;
    }

    # Fallback for SPA routing - serve index.html for any unmatched routes
    location @fallback {
        rewrite ^.*$ /index.html last;
    }

    error_page 404 = @fallback;
}