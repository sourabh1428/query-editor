version: '3.8'

services:
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2WJw0nmi97ZDdKRxCE8xuXITA
      POSTGRES_DB: sqlanalytics
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:2WJw0nmi97ZDdKRxCE8xuXITA@db:5432/sqlanalytics
      JWT_SECRET: your-secret-key
      FLASK_ENV: production
      PORT: 5000
      FRONTEND_URL: http://15.207.114.204:3000
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://15.207.114.204:5000
      NODE_ENV: production
    volumes:
      - ./src:/app/src:delegated
      - ./public:/app/public:delegated
      - ./package.json:/app/package.json:delegated
      - ./package-lock.json:/app/package-lock.json:delegated
      - ./tsconfig.json:/app/tsconfig.json:delegated
      - ./vite.config.ts:/app/vite.config.ts:delegated
      - ./postcss.config.js:/app/postcss.config.js:delegated
      - ./tailwind.config.js:/app/tailwind.config.js:delegated
      - ./index.html:/app/index.html:delegated
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local